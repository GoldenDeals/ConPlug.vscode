{"version":3,"file":"extension.js","mappings":"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","sources":[".././node_modules/inherits/inherits.js","../external node-commonjs \"util\"",".././node_modules/glob/common.js",".././src/extension.ts","../external commonjs \"vscode\"",".././node_modules/glob/node_modules/brace-expansion/index.js",".././node_modules/inflight/inflight.js","../external node-commonjs \"events\"",".././node_modules/fs.realpath/index.js",".././node_modules/balanced-match/index.js",".././node_modules/once/once.js",".././node_modules/ignore/index.js",".././node_modules/glob/glob.js",".././node_modules/wrappy/wrappy.js","../external node-commonjs \"assert\"",".././node_modules/path-is-absolute/index.js",".././node_modules/fs.realpath/old.js",".././node_modules/inherits/inherits_browser.js",".././node_modules/glob/sync.js",".././node_modules/concat-map/index.js","../external node-commonjs \"fs\"","../external node-commonjs \"path\"",".././node_modules/glob/node_modules/minimatch/minimatch.js","../webpack/bootstrap","../webpack/startup"],"sourcesContent":["try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","module.exports = require(\"util\");","exports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar fs = require(\"fs\")\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b, 'en')\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n  self.fs = options.fs || fs\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n  // always treat \\ in patterns as escapes, not path separators\n  options.allowWindowsEscape = false\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n","import * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as glob from 'glob';\nimport * as minimatch from 'minimatch';\nimport ignore from 'ignore';\n\n// Profile structure\ninterface Profile {\n  name: string;\n  parent?: string[];\n  files: string[];\n  excluded: string[];\n  workspacePath: string; // Add workspace path to track where each profile comes from\n}\n\n// Global state\nlet currentProfiles: string[] = []; // Change from single profile to array of profiles\nlet profiles: Map<string, Profile> = new Map();\n\n// Track which workspace folders have been loaded\nlet loadedWorkspaceFolders: Set<string> = new Set();\n\n// Add file watchers collection\nlet fileWatchers: vscode.FileSystemWatcher[] = [];\n\n// Extension context for state persistence\nlet extensionContext: vscode.ExtensionContext;\n\n// File decoration provider\nlet fileDecorationProvider: vscode.Disposable | undefined;\n\n// Set to store files that will be concatenated\nlet filesToConcatenateSet: Set<string> = new Set();\n\nexport function activate(context: vscode.ExtensionContext) {\n  // Log activation with more details\n  console.log('ConPlug extension activated - version 1.0.0');\n  console.log('Workspace folders:', vscode.workspace.workspaceFolders ? vscode.workspace.workspaceFolders.length : 'none');\n  \n  try {\n    // Store extension context\n    extensionContext = context;\n\n    // Load saved profiles from global state\n    const savedProfiles = context.globalState.get<string[]>('currentProfiles', []);\n    if (savedProfiles.length > 0) {\n      currentProfiles = savedProfiles;\n      console.log('Loaded saved profiles:', savedProfiles);\n    }\n\n    // Register commands\n    context.subscriptions.push(\n      vscode.commands.registerCommand('conplug.showProfiles', showProfiles),\n      vscode.commands.registerCommand('conplug.formFile', formFile),\n      vscode.commands.registerCommand('conplug.updateFileDecorations', updateFileDecorations)\n    );\n    console.log('ConPlug: Commands registered successfully');\n\n    // Setup file watchers for all workspace folders\n    setupFileWatchers();\n    \n    // Handle workspace changes\n    context.subscriptions.push(\n      vscode.workspace.onDidChangeWorkspaceFolders(handleWorkspaceChange)\n    );\n\n    // Listen for configuration changes\n    context.subscriptions.push(\n      vscode.workspace.onDidChangeConfiguration(event => {\n        // Check if our extension's configuration changed\n        if (event.affectsConfiguration('conplug.fileDecorationSymbol')) {\n          // Force refresh the file decorations to reflect the changed symbol\n          vscode.commands.executeCommand('workbench.files.action.refreshFilesExplorer');\n        } else if (event.affectsConfiguration('conplug.includeGitIgnored') || \n                   event.affectsConfiguration('conplug.excludePatterns')) {\n          // Refresh file decorations if gitignore or exclude pattern settings change\n          updateFileDecorations();\n        }\n      })\n    );\n\n    // Register file decoration provider\n    registerFileDecorationProvider(context);\n\n    // Update file decorations if we have active profiles\n    if (currentProfiles.length > 0) {\n      // Load configurations first\n      const workspaceFolders = vscode.workspace.workspaceFolders;\n      if (workspaceFolders) {\n        for (const folder of workspaceFolders) {\n          loadConfig(folder.uri.fsPath);\n        }\n      }\n      \n      // Update decorations\n      updateFileDecorations();\n    }\n    \n    // Register some test commands to verify extension is working\n    context.subscriptions.push(\n      vscode.commands.registerCommand('conplug.test', () => {\n        const diagnosticInfo = getDiagnosticInfo();\n        vscode.window.showInformationMessage('ConPlug: Test command executed successfully');\n        \n        // Create a new editor with diagnostic information\n        vscode.workspace.openTextDocument({ \n          content: diagnosticInfo,\n          language: 'markdown'\n        }).then(doc => {\n          vscode.window.showTextDocument(doc);\n        });\n      })\n    );\n    \n    console.log('ConPlug extension activation completed successfully');\n  } catch (error) {\n    console.error('ConPlug activation error:', error);\n    vscode.window.showErrorMessage(`ConPlug: Error during activation: ${error}`);\n  }\n}\n\n// Register file decoration provider to show visual marks on included files\nfunction registerFileDecorationProvider(context: vscode.ExtensionContext) {\n  const provider = vscode.window.registerFileDecorationProvider({\n    provideFileDecoration(uri) {\n      // Convert the URI to a file path\n      const filePath = uri.fsPath;\n      \n      // Check if this file is in our list of files to concatenate\n      if (filesToConcatenateSet.has(filePath)) {\n        // Get the decoration symbol from configuration\n        const config = vscode.workspace.getConfiguration('conplug');\n        const symbol = config.get<string>('fileDecorationSymbol', '⚡');\n        \n        return {\n          badge: symbol, // Use the configured symbol\n          tooltip: 'Included in ConPlug profile',\n          color: new vscode.ThemeColor('conplug.fileDecorationForeground') // Use theme color if defined\n        };\n      }\n      return undefined;\n    }\n  });\n  \n  // Store provider to dispose later\n  fileDecorationProvider = provider;\n  context.subscriptions.push(provider);\n}\n\n// Update the file decorations based on current profiles\nasync function updateFileDecorations() {\n  // Clear existing set\n  filesToConcatenateSet.clear();\n  \n  // Get all workspace folders\n  const workspaceFolders = vscode.workspace.workspaceFolders;\n  if (!workspaceFolders || workspaceFolders.length === 0) {\n    return;\n  }\n\n  // Ensure configurations are loaded\n  let configFound = false;\n  for (const folder of workspaceFolders) {\n    const hasConfig = loadConfig(folder.uri.fsPath);\n    configFound = configFound || hasConfig;\n  }\n\n  // If no config found or no profiles loaded, get all files from each workspace\n  if (!configFound || profiles.size === 0) {\n    // Include all files from each workspace folder\n    for (const folder of workspaceFolders) {\n      const allWorkspaceFiles = getAllWorkspaceFiles(folder.uri.fsPath);\n      allWorkspaceFiles.forEach(file => filesToConcatenateSet.add(file));\n    }\n  }\n  // Otherwise, use the selected profiles\n  else if (currentProfiles.length > 0) {\n    // Get all files to concatenate from all selected profiles\n    for (const profileName of currentProfiles) {\n      const profile = profiles.get(profileName);\n      if (!profile) {\n        continue;\n      }\n      \n      const profileFiles = resolveFiles(profile, profile.workspacePath);\n      profileFiles.forEach(file => filesToConcatenateSet.add(file));\n    }\n  }\n\n  // Force refresh of file decorations\n  vscode.commands.executeCommand('workbench.files.action.refreshFilesExplorer');\n}\n\n// Function to setup file watchers for all workspace folders\nfunction setupFileWatchers() {\n  // Clear existing watchers\n  disposeFileWatchers();\n  \n  const workspaceFolders = vscode.workspace.workspaceFolders;\n  if (!workspaceFolders) {\n    return;\n  }\n  \n  // Create watchers for each workspace folder\n  for (const folder of workspaceFolders) {\n    const watcher = vscode.workspace.createFileSystemWatcher(\n      new vscode.RelativePattern(folder, '.conplug')\n    );\n    \n    // Watch for any changes to .conplug files\n    watcher.onDidChange(() => reloadConfiguration(folder.uri.fsPath));\n    watcher.onDidCreate(() => reloadConfiguration(folder.uri.fsPath));\n    watcher.onDidDelete(() => reloadConfiguration(folder.uri.fsPath));\n    \n    // Add to collection and disposables\n    fileWatchers.push(watcher);\n    extensionContext.subscriptions.push(watcher);\n  }\n}\n\n// Function to dispose all file watchers\nfunction disposeFileWatchers() {\n  for (const watcher of fileWatchers) {\n    watcher.dispose();\n  }\n  fileWatchers = [];\n}\n\n// Handle workspace folder changes\nfunction handleWorkspaceChange(e: vscode.WorkspaceFoldersChangeEvent) {\n  // Reload configurations and setup watchers\n  setupFileWatchers();\n  \n  // Reset loaded workspaces\n  loadedWorkspaceFolders.clear();\n  \n  // Reload all configurations\n  const workspaceFolders = vscode.workspace.workspaceFolders;\n  if (workspaceFolders) {\n    for (const folder of workspaceFolders) {\n      loadConfig(folder.uri.fsPath);\n    }\n  }\n\n  // Update file decorations\n  updateFileDecorations();\n}\n\n// Reload configuration when .conplug file changes\nfunction reloadConfiguration(workspacePath: string) {\n  // Remove from loaded workspaces to force reload\n  loadedWorkspaceFolders.delete(workspacePath);\n  \n  // Find profiles from this workspace to remove\n  const profilesToRemove: string[] = [];\n  profiles.forEach((profile, name) => {\n    if (profile.workspacePath === workspacePath) {\n      profilesToRemove.push(name);\n    }\n  });\n  \n  // Remove profiles from this workspace\n  profilesToRemove.forEach(name => {\n    profiles.delete(name);\n  });\n  \n  // Load updated config\n  loadConfig(workspacePath);\n  \n  // Check if current profiles still exist\n  const validProfiles = currentProfiles.filter(profile => profiles.has(profile));\n  if (validProfiles.length !== currentProfiles.length) {\n    currentProfiles = validProfiles;\n    // Save updated profiles\n    extensionContext.globalState.update('currentProfiles', currentProfiles);\n    \n    if (validProfiles.length > 0) {\n      vscode.window.showInformationMessage(`ConPlug: Updated to profiles: ${validProfiles.join(', ')}`);\n    } else if (currentProfiles.length > 0) {\n      vscode.window.showWarningMessage('ConPlug: Previously selected profiles no longer exist');\n    }\n  }\n\n  // Update file decorations after config reload\n  updateFileDecorations();\n}\n\n// Show profiles and let user choose one\nasync function showProfiles() {\n  const workspaceFolders = vscode.workspace.workspaceFolders;\n  if (!workspaceFolders || workspaceFolders.length === 0) {\n    vscode.window.showErrorMessage('ConPlug: No workspace folder found');\n    return;\n  }\n\n  // Reset profiles and loaded workspaces\n  profiles.clear();\n  loadedWorkspaceFolders.clear();\n\n  // Load .conplug files from all workspace folders\n  let configFound = false;\n  for (const folder of workspaceFolders) {\n    const hasConfig = loadConfig(folder.uri.fsPath);\n    configFound = configFound || hasConfig;\n  }\n\n  // Check if we have profiles to show\n  const profileNames = Array.from(profiles.keys());\n  \n  // If no config found or no profiles defined\n  if (!configFound || profileNames.length === 0) {\n    // Ask for confirmation before using all files in workspace\n    const useAllFiles = await vscode.window.showInformationMessage(\n      'ConPlug: No .conplug file found or no profiles defined. Use all files in workspace?',\n      { modal: true },\n      'Yes', 'No'\n    );\n    \n    if (useAllFiles === 'Yes') {\n      // Set a special profile name to indicate \"all files\"\n      currentProfiles = ['_ALL_FILES_'];\n      extensionContext.globalState.update('currentProfiles', currentProfiles);\n      \n      vscode.window.showInformationMessage('ConPlug: Using all files in workspace.');\n      \n      // Update file decorations to include all files\n      updateFileDecorations();\n    } else {\n      vscode.window.showInformationMessage('ConPlug: No profiles selected.');\n      currentProfiles = [];\n      extensionContext.globalState.update('currentProfiles', []);\n    }\n    return;\n  }\n\n  // Create QuickPickItems with previously selected items pre-selected\n  const quickPickItems = profileNames.map(name => ({\n    label: name,\n    picked: currentProfiles.includes(name) && !currentProfiles.includes('_ALL_FILES_')\n  }));\n\n  // Show quickpick with profile names and allow multiple selection\n  const selected = await vscode.window.showQuickPick(quickPickItems, {\n    placeHolder: 'Select profile(s)',\n    canPickMany: true // Enable multiple selection\n  });\n\n  if (selected && selected.length > 0) {\n    currentProfiles = selected.map(item => item.label); // Get profile names from the QuickPickItems\n    const profilesText = currentProfiles.join(', ');\n    vscode.window.showInformationMessage(`ConPlug: Selected profiles: ${profilesText}`);\n    \n    // Save selection to extension context\n    extensionContext.globalState.update('currentProfiles', currentProfiles);\n\n    // Update file decorations after profiles selection\n    updateFileDecorations();\n  } else {\n    // Clear selection if user canceled or deselected all profiles\n    currentProfiles = [];\n    extensionContext.globalState.update('currentProfiles', []);\n    \n    // Clear file decorations\n    filesToConcatenateSet.clear();\n    vscode.commands.executeCommand('workbench.files.action.refreshFilesExplorer');\n    vscode.window.showInformationMessage('ConPlug: Cleared profile selection');\n  }\n}\n\n// Form concatenated file from current profile(s)\nasync function formFile() {\n  const workspaceFolders = vscode.workspace.workspaceFolders;\n  if (!workspaceFolders || workspaceFolders.length === 0) {\n    vscode.window.showErrorMessage('ConPlug: No workspace folder found');\n    return;\n  }\n\n  // Check if current profiles are set\n  if (!currentProfiles || currentProfiles.length === 0) {\n    vscode.window.showErrorMessage('ConPlug: No profiles selected. Use \"Show profiles\" command first.');\n    return;\n  }\n\n  // Get all files to concatenate\n  const allFiles = new Set<string>();\n  \n  // If using special '_ALL_FILES_' mode, get all files from all workspaces\n  if (currentProfiles.includes('_ALL_FILES_')) {\n    // Ask for confirmation before processing all files\n    const continueWithAllFiles = await vscode.window.showInformationMessage(\n      'ConPlug: This will concatenate ALL files in the workspace and may be slow for large workspaces. Continue?',\n      { modal: true },\n      'Yes', 'No'\n    );\n    \n    if (continueWithAllFiles !== 'Yes') {\n      return;\n    }\n    \n    // Show progress indicator while collecting files\n    await vscode.window.withProgress({\n      location: vscode.ProgressLocation.Notification,\n      title: 'ConPlug: Collecting files from workspace...',\n      cancellable: false\n    }, async (progress) => {\n      // Collect all files from each workspace\n      for (const folder of workspaceFolders) {\n        const allWorkspaceFiles = getAllWorkspaceFiles(folder.uri.fsPath);\n        allWorkspaceFiles.forEach(file => allFiles.add(file));\n        progress.report({ message: `Found ${allFiles.size} files...` });\n      }\n    });\n  }\n  // Otherwise, use the selected profiles\n  else {\n    for (const profileName of currentProfiles) {\n      const profile = profiles.get(profileName);\n      if (!profile) {\n        vscode.window.showErrorMessage(`ConPlug: Profile \"${profileName}\" not found`);\n        continue;\n      }\n      \n      const profileFiles = resolveFiles(profile, profile.workspacePath);\n      profileFiles.forEach(file => allFiles.add(file));\n    }\n  }\n  \n  const filesToConcatenate = Array.from(allFiles);\n  \n  if (filesToConcatenate.length === 0) {\n    vscode.window.showWarningMessage('ConPlug: No files to concatenate in the selected profiles');\n    return;\n  }\n\n  // Update the filesToConcatenateSet with the resolved files\n  filesToConcatenateSet.clear();\n  filesToConcatenate.forEach(file => filesToConcatenateSet.add(file));\n  \n  // Force refresh of file decorations to show the marks\n  vscode.commands.executeCommand('workbench.files.action.refreshFilesExplorer');\n\n  // Get plugin configuration\n  const config = vscode.workspace.getConfiguration('conplug');\n  const headerPrefix = config.get<string>('headerPrefix', \"\\n\");\n  const headerSuffix = config.get<string>('headerSuffix', \"\\n\");\n\n  // Concatenate files\n  let content = '';\n  for (const file of filesToConcatenate) {\n    try {\n      const fileContent = fs.readFileSync(file, 'utf8');\n      // Find which workspace folder this file belongs to\n      const workspaceFolder = getWorkspaceFolderForFile(file);\n      if (!workspaceFolder) {\n        vscode.window.showErrorMessage(`ConPlug: Could not determine workspace folder for ${file}`);\n        continue;\n      }\n      \n      const relativeFilePath = path.relative(workspaceFolder.uri.fsPath, file);\n      const commentStyle = getCommentStyleForFile(file);\n \n      // Special handling for HTML and CSS comments that need closing tags\n      const ext = path.extname(file).toLowerCase();\n      if (['.html', '.xml', '.svg', '.jsx', '.tsx'].includes(ext)) {\n        content += `${headerPrefix}<!-- File: ${relativeFilePath} -->${headerSuffix}${fileContent}\\n\\n`;\n      } else if (['.css', '.scss', '.less'].includes(ext)) {\n        content += `${headerPrefix}/* File: ${relativeFilePath} */${headerSuffix}${fileContent}\\n\\n`;\n      } else {\n        content += `${headerPrefix}${commentStyle} File: ${relativeFilePath}${headerSuffix}${fileContent}\\n\\n`;\n      }\n    } catch (err) {\n      vscode.window.showErrorMessage(`ConPlug: Error reading file ${file}`);\n    }\n  }\n\n  // Copy to clipboard if configured\n  if (config.get<boolean>('autoCopyToClipboard')) {\n    await vscode.env.clipboard.writeText(content);\n    vscode.window.showInformationMessage('ConPlug: Concatenated content copied to clipboard');\n  }\n\n  // Show in a new editor\n  const doc = await vscode.workspace.openTextDocument({ content });\n  await vscode.window.showTextDocument(doc);\n}\n\n// Helper function to find which workspace folder a file belongs to\nfunction getWorkspaceFolderForFile(filePath: string): vscode.WorkspaceFolder | undefined {\n  const workspaceFolders = vscode.workspace.workspaceFolders;\n  if (!workspaceFolders) {\n    return undefined;\n  }\n  \n  // Sort workspace folders by path length (descending) to match most specific first\n  const sortedFolders = [...workspaceFolders].sort((a, b) => \n    b.uri.fsPath.length - a.uri.fsPath.length\n  );\n  \n  for (const folder of sortedFolders) {\n    if (filePath.startsWith(folder.uri.fsPath)) {\n      return folder;\n    }\n  }\n  \n  return undefined;\n}\n\n// Load .conplug file and parse profiles\nfunction loadConfig(workspacePath: string): boolean {\n  // Skip if already loaded\n  if (loadedWorkspaceFolders.has(workspacePath)) {\n    return true;\n  }\n  \n  const configPath = path.join(workspacePath, '.conplug');\n  if (!fs.existsSync(configPath)) {\n    return false;\n  }\n\n  try {\n    const content = fs.readFileSync(configPath, 'utf8');\n    const workspaceProfiles = parseConfig(content, workspacePath);\n    \n    // Merge profiles\n    for (const [name, profile] of workspaceProfiles.entries()) {\n      profiles.set(name, profile);\n    }\n    \n    // Mark this workspace as loaded\n    loadedWorkspaceFolders.add(workspacePath);\n    return true;\n  } catch (err) {\n    vscode.window.showErrorMessage(`ConPlug: Error parsing .conplug file in ${workspacePath}: ${err}`);\n    return false;\n  }\n}\n\n// Parse .conplug file content\nfunction parseConfig(content: string, workspacePath: string): Map<string, Profile> {\n  const result = new Map<string, Profile>();\n  \n  // Simple parser for the .conplug format\n  const lines = content.split('\\n');\n  let currentProfile: Profile | null = null;\n  \n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i].trim();\n    \n    // Skip empty lines and comments\n    if (line === '' || line.startsWith('#')) {\n      continue;\n    }\n    \n    // Check for profile definition\n    const profileMatch = line.match(/^([^:{}]+)(?::([^{]+))?{/);\n    if (profileMatch) {\n      // Save previous profile if any\n      if (currentProfile) {\n        result.set(currentProfile.name, currentProfile);\n      }\n      \n      // Create new profile\n      const profileName = profileMatch[1].trim();\n      const parents = profileMatch[2] ? \n        profileMatch[2].split(',').map(p => p.trim()) : \n        [];\n      \n      currentProfile = {\n        name: profileName,\n        parent: parents.length > 0 ? parents : undefined,\n        files: [],\n        excluded: [],\n        workspacePath // Store workspace path with the profile\n      };\n      continue;\n    }\n    \n    // Check for profile end\n    if (line === '}') {\n      if (currentProfile) {\n        result.set(currentProfile.name, currentProfile);\n        currentProfile = null;\n      }\n      continue;\n    }\n    \n    // Add file to current profile\n    if (currentProfile) {\n      if (line.startsWith('!')) {\n        currentProfile.excluded.push(line.substring(1).trim());\n      } else {\n        currentProfile.files.push(line);\n      }\n    }\n  }\n  \n  // Save last profile if any\n  if (currentProfile) {\n    result.set(currentProfile.name, currentProfile);\n  }\n  \n  return result;\n}\n\n// Resolve files from profile, including inherited profiles\nfunction resolveFiles(profile: Profile, workspacePath: string): string[] {\n  const allFiles = new Set<string>();\n  const excluded = new Set<string>();\n  \n  // Add files from parent profiles\n  if (profile.parent) {\n    for (const parentName of profile.parent) {\n      const parent = profiles.get(parentName);\n      if (parent) {\n        const parentFiles = resolveFiles(parent, parent.workspacePath);\n        parentFiles.forEach(file => allFiles.add(file));\n      }\n    }\n  }\n  \n  // Add excluded files\n  profile.excluded.forEach(pattern => {\n    const matches = expandGlobPatterns([pattern], workspacePath);\n    matches.forEach(file => excluded.add(file));\n  });\n  \n  // Add files from current profile\n  const fileMatches = expandGlobPatterns(profile.files, workspacePath);\n  fileMatches.forEach(file => {\n    if (!excluded.has(file)) {\n      allFiles.add(file);\n    }\n  });\n  \n  return Array.from(allFiles);\n}\n\n// Expand glob patterns to actual file paths\nfunction expandGlobPatterns(patterns: string[], workspacePath: string): string[] {\n  const includeGitIgnored = vscode.workspace.getConfiguration('conplug').get<boolean>('includeGitIgnored');\n  const allFiles = new Set<string>();\n  const gitIgnorePath = path.join(workspacePath, '.gitignore');\n  \n  // Load .gitignore if exists and setting is enabled\n  let ignoreFilter: any = null;\n  if (!includeGitIgnored && fs.existsSync(gitIgnorePath)) {\n    const gitIgnoreContent = fs.readFileSync(gitIgnorePath, 'utf8');\n    ignoreFilter = ignore().add(gitIgnoreContent);\n  }\n  \n  // Process each pattern\n  for (const pattern of patterns) {\n    // Check if it's a directory pattern ending with /\n    if (pattern.endsWith('/')) {\n      const dirPath = path.join(workspacePath, pattern);\n      const dirGlob = path.join(dirPath, '**/*');\n      const matches = glob.sync(dirGlob, { nodir: true });\n      \n      for (const file of matches) {\n        const relativePath = path.relative(workspacePath, file);\n        if (!ignoreFilter || !ignoreFilter.ignores(relativePath)) {\n          allFiles.add(file);\n        }\n      }\n    } \n    // Check if it's a file pattern\n    else {\n      const filePath = path.join(workspacePath, pattern);\n      if (fs.existsSync(filePath) && fs.statSync(filePath).isFile()) {\n        // Direct file path\n        const relativePath = path.relative(workspacePath, filePath);\n        if (!ignoreFilter || !ignoreFilter.ignores(relativePath)) {\n          allFiles.add(filePath);\n        }\n      } else {\n        // Glob pattern\n        const matches = glob.sync(path.join(workspacePath, pattern));\n        for (const file of matches) {\n          const relativePath = path.relative(workspacePath, file);\n          if (fs.statSync(file).isFile() && (!ignoreFilter || !ignoreFilter.ignores(relativePath))) {\n            allFiles.add(file);\n          }\n        }\n      }\n    }\n  }\n  \n  return Array.from(allFiles);\n}\n\n// Get the appropriate comment style based on file extension\nfunction getCommentStyleForFile(filePath: string): string {\n  const ext = path.extname(filePath).toLowerCase();\n  const config = vscode.workspace.getConfiguration('conplug');\n  const commentMap = config.get<Record<string, string>>('languageCommentMap', {\n    '.sh': '#',\n    '.bash': '#',\n    '.zsh': '#',\n    '.py': '#',\n    '.rb': '#',\n    '.pl': '#',\n    '.pm': '#',\n    '.yml': '#',\n    '.yaml': '#',\n    '.toml': '#',\n    '.conf': '#',\n    '.ini': '#',\n    '.cfg': '#',\n    '.sql': '--',\n    '.lua': '--',\n    'default': '//'\n  });\n  \n  // Check if we have a specific comment style for this extension\n  if (ext in commentMap) {\n    return commentMap[ext];\n  }\n  \n  // Return default comment style\n  return commentMap['default'] || '//';\n}\n\n// Get all files in a workspace folder, respecting gitignore settings\nfunction getAllWorkspaceFiles(workspacePath: string): string[] {\n  const allFiles = new Set<string>();\n  const config = vscode.workspace.getConfiguration('conplug');\n  const includeGitIgnored = config.get<boolean>('includeGitIgnored');\n  const excludePatterns = config.get<string[]>('excludePatterns', [\n    '**/node_modules/**',\n    '**/.git/**',\n    '**/out/**',\n    '**/dist/**',\n    '**/build/**'\n  ]);\n  \n  const gitIgnorePath = path.join(workspacePath, '.gitignore');\n  \n  // Load .gitignore if exists and setting is enabled\n  let ignoreFilter: any = null;\n  if (!includeGitIgnored && fs.existsSync(gitIgnorePath)) {\n    const gitIgnoreContent = fs.readFileSync(gitIgnorePath, 'utf8');\n    ignoreFilter = ignore().add(gitIgnoreContent);\n  }\n\n  try {\n    // Use \"**\" pattern to get all files in the workspace\n    const globPattern = path.join(workspacePath, '**/*');\n    const files = glob.sync(globPattern, { \n      nodir: true,\n      dot: false, // Exclude dot files/folders by default\n      ignore: excludePatterns  // Use the configurable exclude patterns\n    });\n    \n    for (const file of files) {\n      const relativePath = path.relative(workspacePath, file);\n      \n      // Apply gitignore filter if available\n      if (!ignoreFilter || !ignoreFilter.ignores(relativePath)) {\n        allFiles.add(file);\n      }\n    }\n  } catch (err) {\n    vscode.window.showErrorMessage(`ConPlug: Error getting files from workspace: ${err}`);\n  }\n  \n  return Array.from(allFiles);\n}\n\nexport function deactivate() {\n  // Clean up resources\n  disposeFileWatchers();\n  \n  // Dispose file decoration provider if it exists\n  if (fileDecorationProvider) {\n    fileDecorationProvider.dispose();\n    fileDecorationProvider = undefined;\n  }\n}\n\n// Helper function to get diagnostic information\nfunction getDiagnosticInfo(): string {\n  let info = '# ConPlug Diagnostic Information\\n\\n';\n  \n  // Extension info\n  info += '## Extension Information\\n';\n  info += `* Version: 1.0.0\\n`;\n  info += `* Commands Registered: showProfiles, formFile, updateFileDecorations, test\\n`;\n  \n  // Profile info\n  info += '\\n## Profile Information\\n';\n  info += `* Current Profiles: ${currentProfiles.length > 0 ? currentProfiles.join(', ') : 'None'}\\n`;\n  info += `* Loaded Profiles: ${profiles.size}\\n`;\n  \n  if (profiles.size > 0) {\n    info += '\\n### Available Profiles:\\n';\n    profiles.forEach((profile, name) => {\n      info += `* ${name} (from ${profile.workspacePath})\\n`;\n      if (profile.parent && profile.parent.length > 0) {\n        info += `  * Inherits from: ${profile.parent.join(', ')}\\n`;\n      }\n      info += `  * Files: ${profile.files.length}, Excluded: ${profile.excluded.length}\\n`;\n    });\n  }\n  \n  // Workspace info\n  info += '\\n## Workspace Information\\n';\n  const workspaceFolders = vscode.workspace.workspaceFolders;\n  if (!workspaceFolders) {\n    info += '* No workspace folders open\\n';\n  } else {\n    info += `* Workspace Folders: ${workspaceFolders.length}\\n`;\n    workspaceFolders.forEach((folder, index) => {\n      info += `  * ${index+1}: ${folder.name} (${folder.uri.fsPath})\\n`;\n      const configPath = path.join(folder.uri.fsPath, '.conplug');\n      const hasConfig = fs.existsSync(configPath);\n      info += `    * Has .conplug file: ${hasConfig ? 'Yes' : 'No'}\\n`;\n      info += `    * Loaded: ${loadedWorkspaceFolders.has(folder.uri.fsPath) ? 'Yes' : 'No'}\\n`;\n    });\n  }\n  \n  // Command status\n  info += '\\n## Command Registration Status\\n';\n  try {\n    // We can't properly handle this asynchronously in this context\n    // So just indicate that we're checking\n    info += `* Commands checked via test execution\\n`;\n    info += `* If you can run this test command, basic command registration is working\\n`;\n  } catch (error) {\n    info += `* Error checking commands: ${error}\\n`;\n  }\n  \n  // File decoration status\n  info += '\\n## File Decoration Status\\n';\n  info += `* Files marked for concatenation: ${filesToConcatenateSet.size}\\n`;\n  \n  // VSCode version\n  info += '\\n## VSCode Information\\n';\n  info += `* Version: ${vscode.version}\\n`;\n  \n  return info;\n} ","module.exports = require(\"vscode\");","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n","module.exports = require(\"events\");","module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = require('fs')\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = require('./old.js')\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","// A simple implementation of make-array\nfunction makeArray (subject) {\n  return Array.isArray(subject)\n    ? subject\n    : [subject]\n}\n\nconst EMPTY = ''\nconst SPACE = ' '\nconst ESCAPE = '\\\\'\nconst REGEX_TEST_BLANK_LINE = /^\\s+$/\nconst REGEX_INVALID_TRAILING_BACKSLASH = /(?:[^\\\\]|^)\\\\$/\nconst REGEX_REPLACE_LEADING_EXCAPED_EXCLAMATION = /^\\\\!/\nconst REGEX_REPLACE_LEADING_EXCAPED_HASH = /^\\\\#/\nconst REGEX_SPLITALL_CRLF = /\\r?\\n/g\n// /foo,\n// ./foo,\n// ../foo,\n// .\n// ..\nconst REGEX_TEST_INVALID_PATH = /^\\.*\\/|^\\.+$/\n\nconst SLASH = '/'\n\n// Do not use ternary expression here, since \"istanbul ignore next\" is buggy\nlet TMP_KEY_IGNORE = 'node-ignore'\n/* istanbul ignore else */\nif (typeof Symbol !== 'undefined') {\n  TMP_KEY_IGNORE = Symbol.for('node-ignore')\n}\nconst KEY_IGNORE = TMP_KEY_IGNORE\n\nconst define = (object, key, value) =>\n  Object.defineProperty(object, key, {value})\n\nconst REGEX_REGEXP_RANGE = /([0-z])-([0-z])/g\n\nconst RETURN_FALSE = () => false\n\n// Sanitize the range of a regular expression\n// The cases are complicated, see test cases for details\nconst sanitizeRange = range => range.replace(\n  REGEX_REGEXP_RANGE,\n  (match, from, to) => from.charCodeAt(0) <= to.charCodeAt(0)\n    ? match\n    // Invalid range (out of order) which is ok for gitignore rules but\n    //   fatal for JavaScript regular expression, so eliminate it.\n    : EMPTY\n)\n\n// See fixtures #59\nconst cleanRangeBackSlash = slashes => {\n  const {length} = slashes\n  return slashes.slice(0, length - length % 2)\n}\n\n// > If the pattern ends with a slash,\n// > it is removed for the purpose of the following description,\n// > but it would only find a match with a directory.\n// > In other words, foo/ will match a directory foo and paths underneath it,\n// > but will not match a regular file or a symbolic link foo\n// >  (this is consistent with the way how pathspec works in general in Git).\n// '`foo/`' will not match regular file '`foo`' or symbolic link '`foo`'\n// -> ignore-rules will not deal with it, because it costs extra `fs.stat` call\n//      you could use option `mark: true` with `glob`\n\n// '`foo/`' should not continue with the '`..`'\nconst REPLACERS = [\n\n  [\n    // remove BOM\n    // TODO:\n    // Other similar zero-width characters?\n    /^\\uFEFF/,\n    () => EMPTY\n  ],\n\n  // > Trailing spaces are ignored unless they are quoted with backslash (\"\\\")\n  [\n    // (a\\ ) -> (a )\n    // (a  ) -> (a)\n    // (a ) -> (a)\n    // (a \\ ) -> (a  )\n    /((?:\\\\\\\\)*?)(\\\\?\\s+)$/,\n    (_, m1, m2) => m1 + (\n      m2.indexOf('\\\\') === 0\n        ? SPACE\n        : EMPTY\n    )\n  ],\n\n  // replace (\\ ) with ' '\n  // (\\ ) -> ' '\n  // (\\\\ ) -> '\\\\ '\n  // (\\\\\\ ) -> '\\\\ '\n  [\n    /(\\\\+?)\\s/g,\n    (_, m1) => {\n      const {length} = m1\n      return m1.slice(0, length - length % 2) + SPACE\n    }\n  ],\n\n  // Escape metacharacters\n  // which is written down by users but means special for regular expressions.\n\n  // > There are 12 characters with special meanings:\n  // > - the backslash \\,\n  // > - the caret ^,\n  // > - the dollar sign $,\n  // > - the period or dot .,\n  // > - the vertical bar or pipe symbol |,\n  // > - the question mark ?,\n  // > - the asterisk or star *,\n  // > - the plus sign +,\n  // > - the opening parenthesis (,\n  // > - the closing parenthesis ),\n  // > - and the opening square bracket [,\n  // > - the opening curly brace {,\n  // > These special characters are often called \"metacharacters\".\n  [\n    /[\\\\$.|*+(){^]/g,\n    match => `\\\\${match}`\n  ],\n\n  [\n    // > a question mark (?) matches a single character\n    /(?!\\\\)\\?/g,\n    () => '[^/]'\n  ],\n\n  // leading slash\n  [\n\n    // > A leading slash matches the beginning of the pathname.\n    // > For example, \"/*.c\" matches \"cat-file.c\" but not \"mozilla-sha1/sha1.c\".\n    // A leading slash matches the beginning of the pathname\n    /^\\//,\n    () => '^'\n  ],\n\n  // replace special metacharacter slash after the leading slash\n  [\n    /\\//g,\n    () => '\\\\/'\n  ],\n\n  [\n    // > A leading \"**\" followed by a slash means match in all directories.\n    // > For example, \"**/foo\" matches file or directory \"foo\" anywhere,\n    // > the same as pattern \"foo\".\n    // > \"**/foo/bar\" matches file or directory \"bar\" anywhere that is directly\n    // >   under directory \"foo\".\n    // Notice that the '*'s have been replaced as '\\\\*'\n    /^\\^*\\\\\\*\\\\\\*\\\\\\//,\n\n    // '**/foo' <-> 'foo'\n    () => '^(?:.*\\\\/)?'\n  ],\n\n  // starting\n  [\n    // there will be no leading '/'\n    //   (which has been replaced by section \"leading slash\")\n    // If starts with '**', adding a '^' to the regular expression also works\n    /^(?=[^^])/,\n    function startingReplacer () {\n      // If has a slash `/` at the beginning or middle\n      return !/\\/(?!$)/.test(this)\n        // > Prior to 2.22.1\n        // > If the pattern does not contain a slash /,\n        // >   Git treats it as a shell glob pattern\n        // Actually, if there is only a trailing slash,\n        //   git also treats it as a shell glob pattern\n\n        // After 2.22.1 (compatible but clearer)\n        // > If there is a separator at the beginning or middle (or both)\n        // > of the pattern, then the pattern is relative to the directory\n        // > level of the particular .gitignore file itself.\n        // > Otherwise the pattern may also match at any level below\n        // > the .gitignore level.\n        ? '(?:^|\\\\/)'\n\n        // > Otherwise, Git treats the pattern as a shell glob suitable for\n        // >   consumption by fnmatch(3)\n        : '^'\n    }\n  ],\n\n  // two globstars\n  [\n    // Use lookahead assertions so that we could match more than one `'/**'`\n    /\\\\\\/\\\\\\*\\\\\\*(?=\\\\\\/|$)/g,\n\n    // Zero, one or several directories\n    // should not use '*', or it will be replaced by the next replacer\n\n    // Check if it is not the last `'/**'`\n    (_, index, str) => index + 6 < str.length\n\n      // case: /**/\n      // > A slash followed by two consecutive asterisks then a slash matches\n      // >   zero or more directories.\n      // > For example, \"a/**/b\" matches \"a/b\", \"a/x/b\", \"a/x/y/b\" and so on.\n      // '/**/'\n      ? '(?:\\\\/[^\\\\/]+)*'\n\n      // case: /**\n      // > A trailing `\"/**\"` matches everything inside.\n\n      // #21: everything inside but it should not include the current folder\n      : '\\\\/.+'\n  ],\n\n  // normal intermediate wildcards\n  [\n    // Never replace escaped '*'\n    // ignore rule '\\*' will match the path '*'\n\n    // 'abc.*/' -> go\n    // 'abc.*'  -> skip this rule,\n    //    coz trailing single wildcard will be handed by [trailing wildcard]\n    /(^|[^\\\\]+)(\\\\\\*)+(?=.+)/g,\n\n    // '*.js' matches '.js'\n    // '*.js' doesn't match 'abc'\n    (_, p1, p2) => {\n      // 1.\n      // > An asterisk \"*\" matches anything except a slash.\n      // 2.\n      // > Other consecutive asterisks are considered regular asterisks\n      // > and will match according to the previous rules.\n      const unescaped = p2.replace(/\\\\\\*/g, '[^\\\\/]*')\n      return p1 + unescaped\n    }\n  ],\n\n  [\n    // unescape, revert step 3 except for back slash\n    // For example, if a user escape a '\\\\*',\n    // after step 3, the result will be '\\\\\\\\\\\\*'\n    /\\\\\\\\\\\\(?=[$.|*+(){^])/g,\n    () => ESCAPE\n  ],\n\n  [\n    // '\\\\\\\\' -> '\\\\'\n    /\\\\\\\\/g,\n    () => ESCAPE\n  ],\n\n  [\n    // > The range notation, e.g. [a-zA-Z],\n    // > can be used to match one of the characters in a range.\n\n    // `\\` is escaped by step 3\n    /(\\\\)?\\[([^\\]/]*?)(\\\\*)($|\\])/g,\n    (match, leadEscape, range, endEscape, close) => leadEscape === ESCAPE\n      // '\\\\[bar]' -> '\\\\\\\\[bar\\\\]'\n      ? `\\\\[${range}${cleanRangeBackSlash(endEscape)}${close}`\n      : close === ']'\n        ? endEscape.length % 2 === 0\n          // A normal case, and it is a range notation\n          // '[bar]'\n          // '[bar\\\\\\\\]'\n          ? `[${sanitizeRange(range)}${endEscape}]`\n          // Invalid range notaton\n          // '[bar\\\\]' -> '[bar\\\\\\\\]'\n          : '[]'\n        : '[]'\n  ],\n\n  // ending\n  [\n    // 'js' will not match 'js.'\n    // 'ab' will not match 'abc'\n    /(?:[^*])$/,\n\n    // WTF!\n    // https://git-scm.com/docs/gitignore\n    // changes in [2.22.1](https://git-scm.com/docs/gitignore/2.22.1)\n    // which re-fixes #24, #38\n\n    // > If there is a separator at the end of the pattern then the pattern\n    // > will only match directories, otherwise the pattern can match both\n    // > files and directories.\n\n    // 'js*' will not match 'a.js'\n    // 'js/' will not match 'a.js'\n    // 'js' will match 'a.js' and 'a.js/'\n    match => /\\/$/.test(match)\n      // foo/ will not match 'foo'\n      ? `${match}$`\n      // foo matches 'foo' and 'foo/'\n      : `${match}(?=$|\\\\/$)`\n  ],\n\n  // trailing wildcard\n  [\n    /(\\^|\\\\\\/)?\\\\\\*$/,\n    (_, p1) => {\n      const prefix = p1\n        // '\\^':\n        // '/*' does not match EMPTY\n        // '/*' does not match everything\n\n        // '\\\\\\/':\n        // 'abc/*' does not match 'abc/'\n        ? `${p1}[^/]+`\n\n        // 'a*' matches 'a'\n        // 'a*' matches 'aa'\n        : '[^/]*'\n\n      return `${prefix}(?=$|\\\\/$)`\n    }\n  ],\n]\n\n// A simple cache, because an ignore rule only has only one certain meaning\nconst regexCache = Object.create(null)\n\n// @param {pattern}\nconst makeRegex = (pattern, ignoreCase) => {\n  let source = regexCache[pattern]\n\n  if (!source) {\n    source = REPLACERS.reduce(\n      (prev, [matcher, replacer]) =>\n        prev.replace(matcher, replacer.bind(pattern)),\n      pattern\n    )\n    regexCache[pattern] = source\n  }\n\n  return ignoreCase\n    ? new RegExp(source, 'i')\n    : new RegExp(source)\n}\n\nconst isString = subject => typeof subject === 'string'\n\n// > A blank line matches no files, so it can serve as a separator for readability.\nconst checkPattern = pattern => pattern\n  && isString(pattern)\n  && !REGEX_TEST_BLANK_LINE.test(pattern)\n  && !REGEX_INVALID_TRAILING_BACKSLASH.test(pattern)\n\n  // > A line starting with # serves as a comment.\n  && pattern.indexOf('#') !== 0\n\nconst splitPattern = pattern => pattern.split(REGEX_SPLITALL_CRLF)\n\nclass IgnoreRule {\n  constructor (\n    origin,\n    pattern,\n    negative,\n    regex\n  ) {\n    this.origin = origin\n    this.pattern = pattern\n    this.negative = negative\n    this.regex = regex\n  }\n}\n\nconst createRule = (pattern, ignoreCase) => {\n  const origin = pattern\n  let negative = false\n\n  // > An optional prefix \"!\" which negates the pattern;\n  if (pattern.indexOf('!') === 0) {\n    negative = true\n    pattern = pattern.substr(1)\n  }\n\n  pattern = pattern\n  // > Put a backslash (\"\\\") in front of the first \"!\" for patterns that\n  // >   begin with a literal \"!\", for example, `\"\\!important!.txt\"`.\n  .replace(REGEX_REPLACE_LEADING_EXCAPED_EXCLAMATION, '!')\n  // > Put a backslash (\"\\\") in front of the first hash for patterns that\n  // >   begin with a hash.\n  .replace(REGEX_REPLACE_LEADING_EXCAPED_HASH, '#')\n\n  const regex = makeRegex(pattern, ignoreCase)\n\n  return new IgnoreRule(\n    origin,\n    pattern,\n    negative,\n    regex\n  )\n}\n\nconst throwError = (message, Ctor) => {\n  throw new Ctor(message)\n}\n\nconst checkPath = (path, originalPath, doThrow) => {\n  if (!isString(path)) {\n    return doThrow(\n      `path must be a string, but got \\`${originalPath}\\``,\n      TypeError\n    )\n  }\n\n  // We don't know if we should ignore EMPTY, so throw\n  if (!path) {\n    return doThrow(`path must not be empty`, TypeError)\n  }\n\n  // Check if it is a relative path\n  if (checkPath.isNotRelative(path)) {\n    const r = '`path.relative()`d'\n    return doThrow(\n      `path should be a ${r} string, but got \"${originalPath}\"`,\n      RangeError\n    )\n  }\n\n  return true\n}\n\nconst isNotRelative = path => REGEX_TEST_INVALID_PATH.test(path)\n\ncheckPath.isNotRelative = isNotRelative\ncheckPath.convert = p => p\n\nclass Ignore {\n  constructor ({\n    ignorecase = true,\n    ignoreCase = ignorecase,\n    allowRelativePaths = false\n  } = {}) {\n    define(this, KEY_IGNORE, true)\n\n    this._rules = []\n    this._ignoreCase = ignoreCase\n    this._allowRelativePaths = allowRelativePaths\n    this._initCache()\n  }\n\n  _initCache () {\n    this._ignoreCache = Object.create(null)\n    this._testCache = Object.create(null)\n  }\n\n  _addPattern (pattern) {\n    // #32\n    if (pattern && pattern[KEY_IGNORE]) {\n      this._rules = this._rules.concat(pattern._rules)\n      this._added = true\n      return\n    }\n\n    if (checkPattern(pattern)) {\n      const rule = createRule(pattern, this._ignoreCase)\n      this._added = true\n      this._rules.push(rule)\n    }\n  }\n\n  // @param {Array<string> | string | Ignore} pattern\n  add (pattern) {\n    this._added = false\n\n    makeArray(\n      isString(pattern)\n        ? splitPattern(pattern)\n        : pattern\n    ).forEach(this._addPattern, this)\n\n    // Some rules have just added to the ignore,\n    // making the behavior changed.\n    if (this._added) {\n      this._initCache()\n    }\n\n    return this\n  }\n\n  // legacy\n  addPattern (pattern) {\n    return this.add(pattern)\n  }\n\n  //          |           ignored : unignored\n  // negative |   0:0   |   0:1   |   1:0   |   1:1\n  // -------- | ------- | ------- | ------- | --------\n  //     0    |  TEST   |  TEST   |  SKIP   |    X\n  //     1    |  TESTIF |  SKIP   |  TEST   |    X\n\n  // - SKIP: always skip\n  // - TEST: always test\n  // - TESTIF: only test if checkUnignored\n  // - X: that never happen\n\n  // @param {boolean} whether should check if the path is unignored,\n  //   setting `checkUnignored` to `false` could reduce additional\n  //   path matching.\n\n  // @returns {TestResult} true if a file is ignored\n  _testOne (path, checkUnignored) {\n    let ignored = false\n    let unignored = false\n\n    this._rules.forEach(rule => {\n      const {negative} = rule\n      if (\n        unignored === negative && ignored !== unignored\n        || negative && !ignored && !unignored && !checkUnignored\n      ) {\n        return\n      }\n\n      const matched = rule.regex.test(path)\n\n      if (matched) {\n        ignored = !negative\n        unignored = negative\n      }\n    })\n\n    return {\n      ignored,\n      unignored\n    }\n  }\n\n  // @returns {TestResult}\n  _test (originalPath, cache, checkUnignored, slices) {\n    const path = originalPath\n      // Supports nullable path\n      && checkPath.convert(originalPath)\n\n    checkPath(\n      path,\n      originalPath,\n      this._allowRelativePaths\n        ? RETURN_FALSE\n        : throwError\n    )\n\n    return this._t(path, cache, checkUnignored, slices)\n  }\n\n  _t (path, cache, checkUnignored, slices) {\n    if (path in cache) {\n      return cache[path]\n    }\n\n    if (!slices) {\n      // path/to/a.js\n      // ['path', 'to', 'a.js']\n      slices = path.split(SLASH)\n    }\n\n    slices.pop()\n\n    // If the path has no parent directory, just test it\n    if (!slices.length) {\n      return cache[path] = this._testOne(path, checkUnignored)\n    }\n\n    const parent = this._t(\n      slices.join(SLASH) + SLASH,\n      cache,\n      checkUnignored,\n      slices\n    )\n\n    // If the path contains a parent directory, check the parent first\n    return cache[path] = parent.ignored\n      // > It is not possible to re-include a file if a parent directory of\n      // >   that file is excluded.\n      ? parent\n      : this._testOne(path, checkUnignored)\n  }\n\n  ignores (path) {\n    return this._test(path, this._ignoreCache, false).ignored\n  }\n\n  createFilter () {\n    return path => !this.ignores(path)\n  }\n\n  filter (paths) {\n    return makeArray(paths).filter(this.createFilter())\n  }\n\n  // @returns {TestResult}\n  test (path) {\n    return this._test(path, this._testCache, true)\n  }\n}\n\nconst factory = options => new Ignore(options)\n\nconst isPathValid = path =>\n  checkPath(path && checkPath.convert(path), path, RETURN_FALSE)\n\nfactory.isPathValid = isPathValid\n\n// Fixes typescript\nfactory.default = factory\n\nmodule.exports = factory\n\n// Windows\n// --------------------------------------------------------------\n/* istanbul ignore if */\nif (\n  // Detect `process` so that it can run in browsers.\n  typeof process !== 'undefined'\n  && (\n    process.env && process.env.IGNORE_TEST_WIN32\n    || process.platform === 'win32'\n  )\n) {\n  /* eslint no-control-regex: \"off\" */\n  const makePosix = str => /^\\\\\\\\\\?\\\\/.test(str)\n  || /[\"<>|\\u0000-\\u001F]+/u.test(str)\n    ? str\n    : str.replace(/\\\\/g, '/')\n\n  checkPath.convert = makePosix\n\n  // 'C:\\\\foo'     <- 'C:\\\\foo' has been converted to 'C:/'\n  // 'd:\\\\foo'\n  const REGIX_IS_WINDOWS_PATH_ABSOLUTE = /^[a-z]:\\//i\n  checkPath.isNotRelative = path =>\n    REGIX_IS_WINDOWS_PATH_ABSOLUTE.test(path)\n    || isNotRelative(path)\n}\n","// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) ||\n      isAbsolute(pattern.map(function (p) {\n        return typeof p === 'string' ? p : '[*]'\n      }).join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    self.fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  self.fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    self.fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return self.fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","module.exports = require(\"assert\");","'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert.ok(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert.ok(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) ||\n      isAbsolute(pattern.map(function (p) {\n        return typeof p === 'string' ? p : '[*]'\n      }).join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = this.fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, this.fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = this.fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = this.fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = (function () { try { return require('path') } catch (e) {}}()) || {\n  sep: '/'\n}\nminimatch.sep = path.sep\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  b = b || {}\n  var t = {}\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n  m.Minimatch.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options)).Minimatch\n  }\n\n  m.filter = function filter (pattern, options) {\n    return orig.filter(pattern, ext(def, options))\n  }\n\n  m.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options))\n  }\n\n  m.makeRe = function makeRe (pattern, options) {\n    return orig.makeRe(pattern, ext(def, options))\n  }\n\n  m.braceExpand = function braceExpand (pattern, options) {\n    return orig.braceExpand(pattern, ext(def, options))\n  }\n\n  m.match = function (list, pattern, options) {\n    return orig.match(list, pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (!options.allowWindowsEscape && path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n  this.partial = !!options.partial\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = function debug() { console.error.apply(console, arguments) }\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\nvar MAX_PATTERN_LENGTH = 1024 * 64\nvar assertValidPattern = function (pattern) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  assertValidPattern(pattern)\n\n  var options = this.options\n\n  // shortcuts\n  if (pattern === '**') {\n    if (!options.noglobstar)\n      return GLOBSTAR\n    else\n      pattern = '*'\n  }\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      /* istanbul ignore next */\n      case '/': {\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n      }\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        // split where the last [ was, make sure we don't have\n        // an invalid re. if so, re-walk the contents of the\n        // would-be class to re-translate any characters that\n        // were passed through as-is\n        // TODO: It would probably be faster to determine this\n        // without a try/catch and a new RegExp, but it's tricky\n        // to do safely.  For now, this is safe and works.\n        var cs = pattern.substring(classStart + 1, i)\n        try {\n          RegExp('[' + cs + ']')\n        } catch (er) {\n          // not a valid class!\n          var sp = this.parse(cs, SUBPARSE)\n          re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n          hasMagic = hasMagic || sp[1]\n          inClass = false\n          continue\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '[': case '.': case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) /* istanbul ignore next - should be impossible */ {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) /* istanbul ignore next - should be impossible */ {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = function match (f, partial) {\n  if (typeof partial === 'undefined') partial = this.partial\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    /* istanbul ignore if */\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      /* istanbul ignore if */\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      hit = f === p\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else /* istanbul ignore else */ if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    return (fi === fl - 1) && (file[fi] === '')\n  }\n\n  // should be unreachable.\n  /* istanbul ignore next */\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["util","inherits","module","exports","e","require","ownProp","obj","field","Object","prototype","hasOwnProperty","call","setopts","self","pattern","options","matchBase","indexOf","noglobstar","Error","silent","strict","realpath","realpathCache","create","follow","dot","mark","nodir","sync","nounique","nonull","nosort","nocase","stat","noprocess","absolute","fs","maxLength","Infinity","cache","statCache","symlinks","ignore","Array","isArray","length","map","ignoreMap","setupIgnores","changedCwd","cwd","process","path","resolve","root","platform","replace","cwdAbs","isAbsolute","makeAbs","nomount","nonegate","nocomment","allowWindowsEscape","minimatch","Minimatch","finish","nou","all","i","l","matches","keys","m","push","apply","forEach","literal","globSet","sort","alphasort","_mark","filter","notDir","test","c","isIgnored","found","p","abs","isDir","slash","slice","mabs","childrenIgnored","some","item","gmatcher","match","a","b","localeCompare","gpattern","matcher","f","charAt","join","extensionContext","fileDecorationProvider","currentProfiles","profiles","Map","loadedWorkspaceFolders","Set","fileWatchers","filesToConcatenateSet","async","updateFileDecorations","clear","workspaceFolders","vscode","workspace","configFound","folder","hasConfig","loadConfig","uri","fsPath","size","profileName","profile","get","resolveFiles","workspacePath","file","add","getAllWorkspaceFiles","commands","executeCommand","setupFileWatchers","disposeFileWatchers","watcher","createFileSystemWatcher","RelativePattern","onDidChange","reloadConfiguration","onDidCreate","onDidDelete","subscriptions","dispose","handleWorkspaceChange","delete","profilesToRemove","name","validProfiles","has","globalState","update","window","showInformationMessage","showWarningMessage","showProfiles","showErrorMessage","profileNames","from","modal","quickPickItems","label","picked","includes","selected","showQuickPick","placeHolder","canPickMany","profilesText","formFile","allFiles","withProgress","location","ProgressLocation","Notification","title","cancellable","progress","report","message","filesToConcatenate","config","getConfiguration","headerPrefix","headerSuffix","content","fileContent","readFileSync","workspaceFolder","getWorkspaceFolderForFile","relativeFilePath","relative","commentStyle","getCommentStyleForFile","ext","extname","toLowerCase","err","env","clipboard","writeText","doc","openTextDocument","showTextDocument","filePath","sortedFolders","startsWith","configPath","existsSync","workspaceProfiles","result","lines","split","currentProfile","line","trim","profileMatch","set","parents","parent","undefined","files","excluded","substring","parseConfig","entries","parentName","expandGlobPatterns","patterns","includeGitIgnored","gitIgnorePath","ignoreFilter","gitIgnoreContent","endsWith","dirPath","dirGlob","glob","relativePath","ignores","statSync","isFile","commentMap","excludePatterns","globPattern","context","console","log","savedProfiles","registerCommand","onDidChangeWorkspaceFolders","onDidChangeConfiguration","event","affectsConfiguration","provider","registerFileDecorationProvider","provideFileDecoration","badge","tooltip","color","ThemeColor","diagnosticInfo","info","index","error","version","getDiagnosticInfo","language","then","concatMap","balanced","str","substr","expand","escSlash","escOpen","escClose","escComma","escPeriod","escapeBraces","unescapeBraces","Math","random","numeric","parseInt","charCodeAt","parseCommaParts","parts","pre","body","post","postParts","shift","embrace","isPadded","el","lte","y","gte","isTop","expansions","n","isNumericSequence","isAlphaSequence","isSequence","isOptions","N","x","width","max","incr","pad","String","fromCharCode","need","z","j","k","expansion","wrappy","reqs","once","key","cb","RES","cbs","len","args","array","arguments","splice","nextTick","makeres","realpathSync","monkeypatch","unmonkeypatch","origRealpath","origRealpathSync","ok","old","newError","er","syscall","code","RegExp","maybeMatch","r","range","start","end","reg","begs","beg","left","right","ai","bi","pop","fn","called","value","this","onceStrict","onceError","proto","defineProperty","Function","configurable","makeArray","subject","REGEX_TEST_BLANK_LINE","REGEX_INVALID_TRAILING_BACKSLASH","REGEX_REPLACE_LEADING_EXCAPED_EXCLAMATION","REGEX_REPLACE_LEADING_EXCAPED_HASH","REGEX_SPLITALL_CRLF","REGEX_TEST_INVALID_PATH","TMP_KEY_IGNORE","Symbol","for","KEY_IGNORE","REGEX_REGEXP_RANGE","RETURN_FALSE","REPLACERS","_","m1","m2","SPACE","p1","p2","leadEscape","endEscape","close","slashes","cleanRangeBackSlash","to","sanitizeRange","regexCache","isString","IgnoreRule","constructor","origin","negative","regex","throwError","Ctor","checkPath","originalPath","doThrow","isNotRelative","RangeError","TypeError","convert","Ignore","ignorecase","ignoreCase","allowRelativePaths","_rules","_ignoreCase","_allowRelativePaths","_initCache","_ignoreCache","_testCache","_addPattern","concat","_added","checkPattern","rule","source","reduce","prev","replacer","bind","makeRegex","createRule","splitPattern","addPattern","_testOne","checkUnignored","ignored","unignored","_test","slices","_t","createFilter","paths","factory","isPathValid","default","IGNORE_TEST_WIN32","makePosix","REGIX_IS_WINDOWS_PATH_ABSOLUTE","rp","EE","assert","globSync","common","inflight","Glob","GlobSync","_didRealPath","on","_processing","_emitQueue","_processQueue","paused","done","_process","_finish","hasMagic","options_","extend","aborted","_didRealpath","_realpath","emit","_realpathSet","next","matchset","_makeAbs","real","abort","pause","resume","eq","_emitMatch","pq","inGlobStar","prefix","_processSimple","read","remain","GLOBSTAR","_processGlobStar","_processReaddir","_readdir","_processReaddir2","pn","negate","rawGlob","_glob","dotOk","matchedEntries","st","_readdirInGlobStar","lstatcb","lstat","isSym","isSymbolicLink","isDirectory","readdir","_readdirError","_readdirEntries","readdirCb","_processGlobStar2","remainWithoutGlobStar","gspref","noGlobStar","instead","below","_stat","exists","_processSimple2","trail","needDir","type","statcb","_stat2","wrapper","ret","posix","win32","exec","device","isUnc","Boolean","pathModule","isWindows","DEBUG","NODE_DEBUG","normalize","nextPartRe","splitRootRe","pos","current","base","previous","original","seenLinks","knownHard","lstatSync","lastIndex","resolvedLink","linkTarget","id","dev","toString","ino","readlinkSync","callback","backtrace","missingCallback","throwDeprecation","noDeprecation","msg","stack","traceDeprecation","trace","rethrow","maybeCallback","LOOP","gotResolvedLink","gotStat","gotTarget","readlink","target","ctor","superCtor","super_","enumerable","writable","TempCtor","newPattern","readdirSync","xs","res","sep","plTypes","open","qmark","star","reSpecials","slashSplit","t","assertValidPattern","regexp","comment","empty","partial","make","braceExpand","nobrace","list","defaults","def","orig","makeRe","debug","parseNegate","globParts","s","si","parse","negateOffset","isSub","stateChar","re","escaping","patternListStack","negativeLists","inClass","reClassStart","classStart","patternStart","clearStateChar","noext","reStart","pl","reEnd","cs","sp","SUBPARSE","tail","$1","$2","addPatternStart","nl","nlBefore","nlFirst","nlLast","nlAfter","openParensBefore","cleanAfter","dollar","flags","regExp","_src","twoStar","ex","mm","filename","matchOne","flipNegate","fi","pi","fl","hit","fr","pr","swallowee","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}